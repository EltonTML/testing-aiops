
# Generated by Qodo Gen

# Dependencies:
# pip install pytest-mock
import pytest

class TestCodeUnderTest:

    # fetch_posts successfully retrieves data from the API and returns the first 5 posts
    def test_fetch_posts_success(self, mocker):
        # Arrange
        mock_response = mocker.Mock()
        mock_response.json.return_value = [
            {"id": 1, "title": "Post 1", "body": "Body 1"},
            {"id": 2, "title": "Post 2", "body": "Body 2"},
            {"id": 3, "title": "Post 3", "body": "Body 3"},
            {"id": 4, "title": "Post 4", "body": "Body 4"},
            {"id": 5, "title": "Post 5", "body": "Body 5"},
            {"id": 6, "title": "Post 6", "body": "Body 6"},
            {"id": 7, "title": "Post 7", "body": "Body 7"}
        ]
        mock_get = mocker.patch('requests.get', return_value=mock_response)
    
        # Act
        result = code_under_test.fetch_posts()
    
        # Assert
        mock_get.assert_called_once_with("https://jsonplaceholder.typicode.com/posts")
        mock_response.raise_for_status.assert_called_once()
        assert len(result) == 5
        assert result[0]["id"] == 1
        assert result[4]["id"] == 5

    # fetch_posts returns an empty list when the API request fails
    def test_fetch_posts_failure(self, mocker):
        # Arrange
        mock_get = mocker.patch('requests.get')
        mock_get.side_effect = requests.exceptions.RequestException("API error")
    
        # Act
        result = code_under_test.fetch_posts()
    
        # Assert
        mock_get.assert_called_once_with("https://jsonplaceholder.typicode.com/posts")
        assert result == []
